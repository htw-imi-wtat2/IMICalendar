

<%= form_with(model: event, local: true) do |form| %>
<table>
  <tr>
    <td>
  <% if event.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(event.errors.count, "error") %> prohibited this event from being saved:</h2>

      <ul>
      <% event.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :title %>
    <%= form.text_field :title, id: :event_title %>
  </div>



    <p>Available Categories: <%= @categories_all %>
    <div class="field">
      <%= form.label :categories %>
      <%= text_field_tag(:categories, value = @categories_s, id: 'categories') %>
    </div>

    <div class="ui-widget">
  <label for="tags">Tag programming languages: </label>
  <input id="tags" size="50">
</div>

  <div class="field">
    <%= form.label :start_date %>
    <%= form.datetime_select :start_date, id: :event_start_date %>
  </div>

  <div class="field">
    <%= form.label :end_date %>
    <%= form.datetime_select :end_date, id: :event_end_date %>
  </div>

  <div class="field">
    <%= form.label :location %>
    <%= form.text_field :location, id: :event_location %>
  </div>

  <div class="field">
    <%= form.label :description %>
    <%= form.text_area :description, id: :event_description %>
  </div>
  <div class="actions">
    <%= form.submit %>
  </div>


</td>
<td>
  <% planning_state = @planning_state %>
  <%= form.fields_for :planning_state, planning_state do |ps_form| %>
    <% if planning_state.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(planning_state.errors.count, "error") %> prohibited this planning_state from being saved:</h2>

        <ul>
        <% planning_state.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
        </ul>
      </div>
    <% end %>

    <div class="field">
      <%= ps_form.label :date_set %>
      <%= ps_form.check_box :date_set, id: :planning_state_date_set %>
    </div>

    <div class="field">
      <%= ps_form.label :room_booked %>
      <%= ps_form.check_box :room_booked, id: :planning_state_room_booked %>
    </div>

    <div class="field">
      <%= ps_form.label :announced %>
      <%= ps_form.check_box :announced, id: :planning_state_announced %>
    </div>

    <div class="field">
      <%= ps_form.label :notes %>
      <%= ps_form.text_area :notes, id: :planning_state_notes %>
    </div>

<% end %>

</td>
</tr>
</table>

<%
# for documentation see:
# https://jqueryui.com/autocomplete/#multiple
# http://api.jqueryui.com/autocomplete/
%>
<script>
  $( function() {
    var availableTags = [<%= raw(@categories_js)%>];
    function split( val ) {
      return val.split( /,\s*/ );
    }
    function extractLast( term ) {
      return split( term ).pop();
    }

    $( "#categories" )
      // don't navigate away from the field on tab when selecting an item
      .on( "keydown", function( event ) {
        if ( event.keyCode === $.ui.keyCode.TAB &&
            $( this ).autocomplete( "instance" ).menu.active ) {
          event.preventDefault();
        }
      })
      .autocomplete({
        minLength: 0,
        source: function( request, response ) {
          // delegate back to autocomplete, but extract the last term
          response( $.ui.autocomplete.filter(
            availableTags, extractLast( request.term ) ) );
        },
        focus: function() {
          // prevent value inserted on focus
          return false;
        },
        select: function( event, ui ) {
          var terms = split( this.value );
          // remove the current input
          terms.pop();
          // add the selected item
          terms.push( ui.item.value );
          // add placeholder to get the comma-and-space at the end
          terms.push( "" );
          this.value = terms.join( ", " );
          return false;
        }
      });
  } );

</script>


<% end %>
<!-- end form -->
